import {
  IExecuteFunctions,
  INodeExecutionData,
  INodeType,
  INodeTypeDescription,
  NodeOperationError,
} from 'n8n-workflow';
import { OpenAIApi, Configuration } from 'openai';

/**
 * Enhanced OpenAI Node with production-optimized configurations
 * and extended functionality for AI workflow integration.
 */
export class OpenAIExtended implements INodeType {
  description: INodeTypeDescription = {
    displayName: 'OpenAI Enhanced',
    name: 'openAIExtended',
    group: ['transform'],
    version: 1,
    subtitle: '={{$parameter["operation"] + ": " + $parameter["model"]}}',
    description: 'Enhanced OpenAI integration with advanced configuration options',
    defaults: {
      name: 'OpenAI Enhanced',
    },
    inputs: ['main'],
    outputs: ['main'],
    credentials: [
      {
        name: 'openAiApi',
        required: true,
      },
    ],
    requestDefaults: {
      ignoreHttpStatusErrors: true,
      baseURL: 'https://api.openai.com/v1',
    },
    properties: [
      // Operation Selection
      {
        displayName: 'Operation',
        name: 'operation',
        type: 'options',
        noDataExpression: true,
        options: [
          {
            name: 'Completion',
            value: 'completion',
            description: 'Create text completions',
            action: 'Create a text completion',
          },
          {
            name: 'Chat',
            value: 'chat',
            description: 'Create chat completions',
            action: 'Create a chat completion',
          },
          {
            name: 'Edit',
            value: 'edit',
            description: 'Edit text based on instructions',
            action: 'Edit text based on instructions',
          },
          {
            name: 'Embedding',
            value: 'embedding',
            description: 'Create embeddings for text',
            action: 'Create an embedding vector',
          },
          {
            name: 'Generate Image',
            value: 'generateImage',
            description: 'Generate images from text',
            action: 'Generate an image from text',
          }
        ],
        default: 'chat',
      },
      
      // Model Selection
      {
        displayName: 'Model',
        name: 'model',
        type: 'options',
        description: 'The model to use for the request',
        default: 'gpt-4',
        options: [
          // Completion & Chat Models
          {
            name: 'GPT-4',
            value: 'gpt-4',
          },
          {
            name: 'GPT-4-32k',
            value: 'gpt-4-32k',
          },
          {
            name: 'GPT-3.5 Turbo',
            value: 'gpt-3.5-turbo',
          },
          {
            name: 'GPT-3.5 Turbo 16k',
            value: 'gpt-3.5-turbo-16k',
          },
          // Image Models
          {
            name: 'DALL-E 3',
            value: 'dall-e-3',
          },
          {
            name: 'DALL-E 2',
            value: 'dall-e-2',
          },
          // Embedding Models
          {
            name: 'text-embedding-ada-002',
            value: 'text-embedding-ada-002',
          },
        ],
        displayOptions: {
          show: {
            operation: [
              'completion',
              'chat',
              'edit',
              'embedding',
              'generateImage',
            ],
          },
        },
      },
      
      // Prompt Configuration for Completion
      {
        displayName: 'Prompt Type',
        name: 'promptType',
        type: 'options',
        options: [
          {
            name: 'Static',
            value: 'static',
            description: 'Use a static prompt',
          },
          {
            name: 'Dynamic (Expression)',
            value: 'dynamic',
            description: 'Define the prompt with an expression',
          },
        ],
        default: 'static',
        displayOptions: {
          show: {
            operation: [
              'completion',
            ],
          },
        },
      },
      {
        displayName: 'Prompt',
        name: 'prompt',
        type: 'string',
        default: '',
        placeholder: 'Enter your prompt here',
        description: 'The prompt to generate completions for',
        typeOptions: {
          rows: 4,
        },
        displayOptions: {
          show: {
            operation: [
              'completion',
            ],
            promptType: [
              'static',
            ],
          },
        },
      },
      {
        displayName: 'Prompt',
        name: 'prompt',
        type: 'string',
        default: '={{ $json.prompt }}',
        displayOptions: {
          show: {
            operation: [
              'completion',
            ],
            promptType: [
              'dynamic',
            ],
          },
        },
        description: 'Expression to define the prompt dynamically',
        required: true,
      },
      
      // Messages Configuration for Chat
      {
        displayName: 'Messages',
        name: 'messages',
        placeholder: 'Add Message',
        type: 'fixedCollection',
        typeOptions: {
          multipleValues: true,
          sortable: true,
        },
        displayOptions: {
          show: {
            operation: [
              'chat',
            ],
          },
        },
        default: {},
        options: [
          {
            name: 'values',
            displayName: 'Message',
            values: [
              {
                displayName: 'Type',
                name: 'type',
                type: 'options',
                options: [
                  {
                    name: 'Select Option',
                    value: 'selectOption',
                  },
                  {
                    name: 'JSON',
                    value: 'json',
                  },
                ],
                default: 'selectOption',
                description: 'Method to select the message type',
              },
              {
                displayName: 'Message Type',
                name: 'messageType',
                type: 'options',
                displayOptions: {
                  show: {
                    type: [
                      'selectOption',
                    ],
                  },
                },
                options: [
                  {
                    name: 'System',
                    value: 'system',
                  },
                  {
                    name: 'User',
                    value: 'user',
                  },
                  {
                    name: 'Assistant',
                    value: 'assistant',
                  },
                  {
                    name: 'Function',
                    value: 'function',
                  },
                ],
                default: 'user',
                description: 'The type of the message',
              },
              {
                displayName: 'Message',
                name: 'message',
                type: 'string',
                displayOptions: {
                  show: {
                    type: [
                      'selectOption',
                    ],
                  },
                },
                default: '',
                typeOptions: {
                  rows: 4,
                },
                description: 'The content of the message',
              },
              {
                displayName: 'JSON',
                name: 'messageJson',
                type: 'json',
                displayOptions: {
                  show: {
                    type: [
                      'json',
                    ],
                  },
                },
                default: '{\n  "role": "user",\n  "content": "Hello!"\n}',
                description: 'Message as a JSON object including "role" and "content"',
              },
            ],
          },
        ],
      },
      
      // Edit Configuration
      {
        displayName: 'Input',
        name: 'input',
        type: 'string',
        default: '',
        displayOptions: {
          show: {
            operation: [
              'edit',
            ],
          },
        },
        description: 'The input text to use as a starting point for the edit',
        typeOptions: {
          rows: 4,
        },
      },
      {
        displayName: 'Instruction',
        name: 'instruction',
        type: 'string',
        default: '',
        displayOptions: {
          show: {
            operation: [
              'edit',
            ],
          },
        },
        description: 'The instruction that tells the model how to edit the prompt',
        typeOptions: {
          rows: 4,
        },
      },
      
      // Embedding Configuration
      {
        displayName: 'Text',
        name: 'text',
        type: 'string',
        default: '',
        displayOptions: {
          show: {
            operation: [
              'embedding',
            ],
          },
        },
        description: 'The text to embed',
        typeOptions: {
          rows: 4,
        },
      },
      
      // Image Generation Configuration
      {
        displayName: 'Prompt',
        name: 'prompt',
        type: 'string',
        default: '',
        displayOptions: {
          show: {
            operation: [
              'generateImage',
            ],
          },
        },
        description: 'A text description of the desired image',
        typeOptions: {
          rows: 4,
        },
      },
      
      // Advanced Options
      {
        displayName: 'Options',
        name: 'options',
        type: 'collection',
        placeholder: 'Add Option',
        default: {},
        displayOptions: {
          show: {
            operation: [
              'completion',
              'chat',
              'edit',
            ],
          },
        },
        options: [
          {
            displayName: 'Temperature',
            name: 'temperature',
            type: 'number',
            default: 0.7,
            description: 'Controls randomness: 0 = deterministic, 1 = very creative. Higher values may cause more randomness and variability.',
            typeOptions: {
              minValue: 0,
              maxValue: 2,
              stepSize: 0.1,
            },
          },
          {
            displayName: 'Max Tokens',
            name: 'maxTokens',
            type: 'number',
            default: 1024,
            description: 'The maximum number of tokens to generate in the completion',
            typeOptions: {
              minValue: 1,
            },
          },
          {
            displayName: 'Top P',
            name: 'topP',
            type: 'number',
            default: 1,
            description: 'Controls diversity via nucleus sampling. Use either temperature or top_p but not both.',
            typeOptions: {
              minValue: 0,
              maxValue: 1,
              stepSize: 0.1,
            },
          },
          {
            displayName: 'Frequency Penalty',
            name: 'frequencyPenalty',
            type: 'number',
            default: 0,
            description: 'Penalizes frequent tokens. Higher value = less repetition.',
            typeOptions: {
              minValue: -2,
              maxValue: 2,
              stepSize: 0.1,
            },
          },
          {
            displayName: 'Presence Penalty',
            name: 'presencePenalty',
            type: 'number',
            default: 0,
            description: 'Penalizes new tokens based on if they appear in the text so far. Higher value = less repetition.',
            typeOptions: {
              minValue: -2,
              maxValue: 2,
              stepSize: 0.1,
            },
          },
          {
            displayName: 'Stop Sequences',
            name: 'stop',
            type: 'string',
            default: '',
            description: 'Comma-separated list of sequences where the API will stop generating',
            placeholder: 'e.g. Human:,AI:',
          },
          {
            displayName: 